apply plugin: 'com.android.application'

android {
        compileSdkVersion 26
        buildToolsVersion = '26.0.3'
        defaultConfig {
            applicationId = "com.client.user.single.singleuseronlineapp"
            minSdkVersion 16
            targetSdkVersion 26
            versionCode 1
            versionName "1.0"


        }
    sourceSets {
            main {
                java.srcDirs += ['../../generated-src/java']
                jni.srcDirs += ['../../generated-src/jni']
                jniLibs.srcDirs = ['libs']
            }
        }


        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }

        //# 指定 CMakeLists 文件路径
        externalNativeBuild {
            cmake {
                path "CMakeLists.txt"
            }
        }
    }

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

}
task ndkBuild(type: Exec) {
    String MainDirectory = System.getProperty("user.dir") + '/app/'
//    File ndkDir = project.getPlugins().getPlugin('android').sdkHandler.getNdkFolder()
    File ndkDir = new File(project.android.ndkDirectory.absolutePath)
    if (ndkDir == null) {
        def gradle_project_root = project.rootProject.rootDir
        throw new GradleException("NDK is not configured. Make sure there is a local.properties " +
                "file with an ndk.dir entry in the directory ${gradle_project_root}.")
    }
    def ndkBuildExecutable = new File(ndkDir, 'ndk-build')
    if (!ndkBuildExecutable.exists()) {
        throw new GradleException("Could not find ndk-build. The configured NDK directory ${ndkDir} may not be correct.")
    }
    environment("NDK_PROJECT_PATH", MainDirectory)
    environment("GYP_CONFIGURATION", "Release")
    commandLine ndkBuildExecutable
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

