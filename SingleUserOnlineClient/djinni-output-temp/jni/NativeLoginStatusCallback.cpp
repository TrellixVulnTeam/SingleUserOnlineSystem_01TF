// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from UserLogin.djinni

#include "NativeLoginStatusCallback.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLoginStatusCallback::NativeLoginStatusCallback() : ::djinni::JniInterface<::UserLogin::LoginStatusCallback, NativeLoginStatusCallback>() {}

NativeLoginStatusCallback::~NativeLoginStatusCallback() = default;

NativeLoginStatusCallback::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLoginStatusCallback::JavaProxy::~JavaProxy() = default;

void NativeLoginStatusCallback::JavaProxy::onLoginSucc() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginStatusCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onLoginSucc);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginStatusCallback::JavaProxy::onLoginOut(int32_t c_retCode, const std::string & c_msg) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginStatusCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onLoginOut,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_retCode)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_msg)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginStatusCallback::JavaProxy::onLoginFailed(int32_t c_retCode, const std::string & c_msg) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginStatusCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onLoginFailed,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_retCode)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_msg)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginStatusCallback::JavaProxy::onSignUpSucc() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginStatusCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSignUpSucc);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginStatusCallback::JavaProxy::onSignUpFailed(int32_t c_retCode, const std::string & c_msg) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginStatusCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSignUpFailed,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_retCode)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_msg)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
