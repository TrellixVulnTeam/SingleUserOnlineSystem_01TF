syntax = "proto3";
//import "common.proto";
package singleuseronline;
// 定义server提供的功能

service SingleUserOnline{

    // sign up a new account
    rpc signUp(LoginInfo) returns (ResultInfo){};

    // live-statue, stream to stream； use status to logout or login
    rpc keepAliveStream(stream LoginInfo) returns (stream LoginInfo){};
    // live-statue, short connection
    rpc keepAliveShort(LoginInfo) returns (ResultInfo){};
}

// login parameters
message LoginInfo {
    // user id
    string userid = 1;
    // 用svr的公钥进行加密，登出请求该字段为空
    string passwordEncoded = 2;
    // 时间戳
    string timestamp = 3;
    // 设备标识，用于防止恶意登出
    string deviceid = 4;
    // 登录的状态
    // 1:需要验证
    // 10000:验证成功
    // other: 验证失败
    int32 status = 5;
}

// response type
message ResultInfo {
    int32 resultCode = 1;
    string resultMsg = 2;
}

enum SvrCode{
    SvrCode_start = 0;
    USER_PWD_ERROR = 10000;
    USER_NOT_EXIST = 10001;
    USER_LOGIN_OTHER = 10002;
    USER_SIGNUP_ERR = 10003;
    USER_LOGIN_ILEAGAL = 10004;
    USER_LOGIN_SUCC = 10005;
    USER_LOGOUT_SUCC = 10006;
    USER_STATUS_CHECK_SUCC = 10007;
    USER_SIGNUP_SUCC = 10008;
    USER_STATUS_NEED_CHECK = 10009;
    USER_STATUS_TOKEN = 10010;
}


enum ClientCode{
    ClientCode_start = 0;
    CLIENT_USER_LOGIN = 20000;
    CLIENT_USER_LOGOUT = 20001;
    CLIENT_NET_CONNECT_ERR = 20002;
    CLIENT_UNKNOWN_ERR = 20003;
    CLIENT_GET_TOKEN = 20004;
}
